import Head from 'next/head';
import { useForm } from 'react-hook-form';

type Input = {
  name: string;
  email: string;
  message: string;
};

function Home() {
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm<Input>();

  const onSubmit = async (data: Input) => {
    console.log('メール送信', data);

    const res = await fetch('api/contact', {
      method: 'POST',
      headers: {
        Accept: 'application/json, text/plain',
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data),
    });

    if (res.status === 200) console.log('メール送信成功');
  };

  return (
    <div className="flex min-h-screen flex-col items-center justify-center bg-gray-100">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="container mt-5 rounded-lg bg-white p-6 shadow-md">
        <h2 className="mb-6 text-center text-2xl font-bold">Next.js Gmailアプリ</h2>
        <form onSubmit={handleSubmit(onSubmit)}>
          <div className="mb-4">
            <label htmlFor="name" className="mb-1 block font-semibold">
              お名前
            </label>
            <input
              type="text"
              className={`w-full rounded-md border px-3 py-2 focus:outline-none focus:ring ${
                errors.name ? 'border-red-500' : 'focus:ring-blue-300'
              }`}
              id="name"
              {...register('name', { required: true })}
            />
            {errors.name && <p className="text-red-500">お名前は必須です。</p>}
          </div>
          <div className="mb-4">
            <label htmlFor="email" className="mb-1 block font-semibold">
              メールアドレス
            </label>
            <input
              type="email"
              className={`w-full rounded-md border px-3 py-2 focus:outline-none focus:ring ${
                errors.email ? 'border-red-500' : 'focus:ring-blue-300'
              }`}
              id="email"
              {...register('email', { required: true })}
            />
            {errors.email && <p className="text-red-500">メールアドレスは必須です。</p>}
          </div>
          <div className="mb-4">
            <label htmlFor="message" className="mb-1 block font-semibold">
              メッセージ
            </label>
            <textarea
              className={`w-full rounded-md border px-3 py-2 focus:outline-none focus:ring ${
                errors.message ? 'border-red-500' : 'focus:ring-blue-300'
              }`}
              id="message"
              {...register('message', { required: true })}
            />
            {errors.message && <p className="text-red-500">メッセージは必須です。</p>}
          </div>
          <button
            type="submit"
            className="w-full rounded-md bg-blue-600 px-4 py-2 text-white hover:bg-blue-700 focus:outline-none"
          >
            メール送信
          </button>
        </form>
      </div>
    </div>
  );
}

export default Home;
